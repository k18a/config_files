#+TITLE: Special Methods

- names begin and end with two underscores
- also known as magic methods
- defined but not usually called directly by name
*** init
**** self
     - refers to the class
     - you can use any name to refer to the class, the first keyword is taken as the self argument, but always use self as per convention
*** repr
- goal is to be unambiguous
- it is convenient to be able to output the value of an instance of an object by using a print statement
- when we do this, we would like the value to be represented in the output in some understandable unambiguous format.
- the \__repr__ special method can be used to arrange for this to happen. 
- if we define this method, it can get called automatically when we print the value of an instance of a class for which we defined this method
*** str
- goal is to be readable

#+BEGIN_SRC python
class Point3D(object):
    def __init__(self,a,b,c):
        self.x = a
        self.y = b
        self.z = c
    def __repr__(self):
        return "Point3D(%d, %d, %d)" % (self.x, self.y, self.z)
    def __str__(self):
        return "(%d, %d, %d)" % (self.x, self.y, self.z)
my_point = Point3D(1, 2, 3)
print `my_point` # __repr__ gets called automatically
print my_point # __str__ gets called automatically
#+END_SRC
